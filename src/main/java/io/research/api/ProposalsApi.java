/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.33).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.research.api;

import io.research.model.Proposal;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-03-11T07:16:01.610Z[GMT]")
@Validated
public interface ProposalsApi {

    @Operation(summary = "Return list of Proposals.", description = "", tags={ "proposal" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Successful Operation.", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Proposal.class)))),
        
        @ApiResponse(responseCode = "404", description = "call not found") })
    @RequestMapping(value = "/proposals",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Proposal>> getProposal(@NotNull @Parameter(in = ParameterIn.QUERY, description = "Which Proposal Do you need. accepted or evaluated or rejected." ,required=true,schema=@Schema(allowableValues={ "submitted", "evaluated", "accepted", "rejected", "disaproved" }
)) @Valid @RequestParam(value = "status", required = true) String status, @Parameter(in = ParameterIn.QUERY, description = "if it is given then return the list of proposal submitted to that call only." ,schema=@Schema()) @Valid @RequestParam(value = "callid", required = false) Integer callid);

}

